package ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem;

import java.util.Arrays;

import cn.nukkit.Player;
import cn.nukkit.Server;
import cn.nukkit.command.Command;
import cn.nukkit.plugin.PluginManager;
import cn.nukkit.utils.Config;
import ru.jl1mbo.AnarchyCore.Main;
import ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem.Commands.BanCommand;
import ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem.Commands.MuteCommand;
import ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem.Commands.UnBanCommand;
import ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem.Commands.UnMuteCommand;
import ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem.EventsListener.PlayerChatListener;
import ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem.EventsListener.PlayerPreLoginListener;
import ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem.Utils.BanUtils;
import ru.jl1mbo.AnarchyCore.SystemProcessorHandler.BanSystem.Utils.MuteUtils;
import ru.jl1mbo.AnarchyCore.Utils.ConfigUtils;
import ru.jl1mbo.AnarchyCore.Utils.Utils;

public class BanSystemAPI {
	public static String PREFIX = "¬ßl¬ß7(¬ß3–°–∏—Å—Ç–µ–º–∞¬ß7) ¬ßr";

	public static void register() {
		PluginManager pluginManager = Server.getInstance().getPluginManager();
		pluginManager.registerEvents(new PlayerChatListener(), Main.getInstance());
		pluginManager.registerEvents(new PlayerPreLoginListener(), Main.getInstance());
		Command[] commands = new Command[] {new BanCommand(), new UnBanCommand(), new MuteCommand(), new UnMuteCommand()};
		Server.getInstance().getCommandMap().registerAll("", Arrays.asList(commands));
	}

	public static boolean IsBanned(String playerName) {
		return ConfigUtils.getBanConfig().exists(playerName.toLowerCase());
	}

	public static boolean IsMuted(String playerName) {
		return ConfigUtils.getMuteConfig().exists(playerName.toLowerCase());
	}

	public static void sendMessageAdmin(Player player, String message, int type) {
		if (player.hasPermission("AdminChat")) {
			switch (type) {
			case 1:
				player.sendMessage(message);
				break;
			case 2:
				player.sendPopup(message);
				break;
			case 3:
				player.sendTitle("", message);
				break;
			}
		}
	}

	public static void addBan(String playerName, String reason, String bannerName, int seconds) {
		long endBan = System.currentTimeMillis() / 1000L + seconds;
		Utils.sendMessageToChat("üîí–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞\n\n–ò–≥—Ä–æ–∫: " + playerName + "\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: " + bannerName + "\n–ü—Ä–∏—á–∏–Ω–∞: " + reason + "\n–ü–µ—Ä–∏–æ–¥: " +
								getRemainingTime(endBan).replaceAll("¬ß[0-9]", "").replaceAll("¬ß[a-zA-Z]", ""), 2000000001);
		Config config = ConfigUtils.getBanConfig();
		config.set(playerName.toLowerCase() + ".Reason", reason);
		config.set(playerName.toLowerCase() + ".Banner", bannerName);
		config.set(playerName.toLowerCase() + ".EndBan", endBan);
		config.save();
		config.reload();
		Player target = Server.getInstance().getPlayerExact(playerName.toLowerCase());
		if (target != null) {
			target.close("", "¬ßl¬ßf–£–≤—ã¬ß7, ¬ßf–Ω–æ –í–∞—Å ¬ß6–≤—Ä–µ–º–µ–Ω–Ω–æ ¬ßf–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏¬ß7!\n¬ßf–ü—Ä–∏—á–∏–Ω–∞¬ß7: ¬ß6" + reason + "\n¬ßf–ò—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑¬ß7: ¬ß6" +
						 getRemainingTime(endBan));
		}
	}

	public static void addMute(String playerName, String reason, String bannerName, int seconds) {
		Config config = ConfigUtils.getMuteConfig();
		long endMute = System.currentTimeMillis() / 1000L + seconds;
		config.set(playerName.toLowerCase() + ".Reason", reason);
		config.set(playerName.toLowerCase() + ".Banner", bannerName);
		config.set(playerName.toLowerCase() + ".EndMute", endMute);
		config.save();
		config.reload();
		Player target = Server.getInstance().getPlayerExact(playerName.toLowerCase());
		if (target != null) {
			target.sendMessage("¬ßl¬ßc‚Ä¢ ¬ßr¬ßf–¢–µ–±—è –∑–∞–º—É—Ç–∏–ª–∏¬ß7! ¬ßf–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–∫—Ä—ã–ª —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É –Ω–∞ ¬ß6" + getRemainingTime(
								   endMute) + " ¬ßf–ø–æ –ø—Ä–∏—á–∏–Ω–µ ¬ß6" + reason + "¬ß7!\n¬ßf–ù–æ –Ω–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è¬ß7, ¬ßf–≤—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è¬ß7!");
		}
	}

	public static void removeBan(String playerName) {
		Config config = ConfigUtils.getBanConfig();
		config.remove(playerName.toLowerCase());
		config.save();
		config.reload();
	}

	public static void removeMute(String playerName) {
		Config config = ConfigUtils.getMuteConfig();
		config.remove(playerName.toLowerCase());
		config.save();
		config.reload();
	}

	public static BanUtils getBanUtils(String playerName) {
		Config config = ConfigUtils.getBanConfig();
		String reason = config.getString(playerName.toLowerCase() + ".Reason");
		String bannerName = config.getString(playerName.toLowerCase() + ".Banner");
		long time = config.getLong(playerName.toLowerCase() + ".EndBan");
		return new BanUtils(playerName.toLowerCase(), reason, bannerName, time);
	}

	public static MuteUtils getMuteUtils(String playerName) {
		Config config = ConfigUtils.getMuteConfig();
		String reason = config.getString(playerName.toLowerCase() + ".Reason");
		String bannerName = config.getString(playerName.toLowerCase() + ".Banner");
		long endMute = config.getLong(playerName.toLowerCase() + ".EndMute");
		return new MuteUtils(playerName.toLowerCase(), reason, bannerName, endMute);
	}

	public static String getRemainingTime(long seconds) {
		long time = System.currentTimeMillis() / 1000L;
		int days = (int)(seconds - time) / 86400;
		int hours = (int)(seconds - time) / 3600 % 24;
		int minutes = (int)(seconds - time) / 60 % 60;
		if (days < 1 && hours < 1) {
			return minutes + " ¬ßf–º–∏–Ω¬ß7.";
		} else if (days < 1) {
			return hours + " ¬ßf—á¬ß7. ¬ß6" + minutes + " ¬ßf–º–∏–Ω¬ß7.";
		} else {
			return days + " ¬ßf–¥¬ß7. ¬ß6" + hours + " ¬ßf—á¬ß7. ¬ß6" + minutes + " ¬ßf–º–∏–Ω¬ß7.";
		}
	}
}